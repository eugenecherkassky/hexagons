{
  "contractName": "TVTBTokenCrowdsale",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "contract ERC721PresetMinterPauserAutoId",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "TVTTokenAlreadyBought",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TVTTokenOnlyOne",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AfterCrowdsaleBuyTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "BeforeCrowdsaleSetRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getWeiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "setRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "contract ERC721PresetMinterPauserAutoId",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"contract ERC721PresetMinterPauserAutoId\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"TVTTokenAlreadyBought\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TVTTokenOnlyOne\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AfterCrowdsaleBuyTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"BeforeCrowdsaleSetRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract ERC721PresetMinterPauserAutoId\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of Crowdsale contract whose tokens are minted in each purchase. Token ownership should be transferred to TVTBTokenCrowdsale for minting.\",\"kind\":\"dev\",\"methods\":{\"buyTokens()\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\"},\"getRate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"getToken()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"getWeiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setRate(uint256)\":{\"params\":{\"rate\":\"Number of token units a buyer gets per wei\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"TVTBTokenCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"AfterCrowdsaleBuyTokens(address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{\"setRate(uint256)\":{\"notice\":\"This function set the rate of token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TVTB/TVTBTokenCrowdsale.sol\":\"TVTBTokenCrowdsale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x1f16f9737853b988865ab819d1ebf8b5009defe981c75bc9079e0f40ed2a2e57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e50f827969ca93b0d7bad1e022aa3147c8f390e9f91bb814752e8fbbbe621c\",\"dweb:/ipfs/QmdR2fJ2a3HM7FyC9pGD4JeKF9z6bxqU9FbhMyQfH1sDJH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xa2695a4c7b192f34b98a3875dfce54c8c6c4976b898a5598b1ce0355ce2e6c56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a9eed1168b7794c22eb3ef76ac6d8c523cfb453c5113e3314781dadb5d0de4b\",\"dweb:/ipfs/QmcoTzSK56c3tUN9zsD66YpTjoxguuo76BdrDs5ZSSaJMp\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol\":{\"keccak256\":\"0x22e0d463a79b304ba50f62609f5ed68c8a32e8c5eb3868111b82d8943e1337ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://561d02fd4b5192c77bf285820221046a4e0af2fcd4daa0beb8ffea3eb5b2ec3a\",\"dweb:/ipfs/QmNbkyFhak5JiiPPchxRBEtnQTqFP5YJ9PU9MspjupZDpy\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]},\"project:/contracts/Crowdsale.sol\":{\"keccak256\":\"0x285faa7954accee740b00f02c54979c11d653340384599ac1b1f893b2f94b43b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f85038385abc394ea681b7592b13ccb3aa6ca0f43cfd311bc13f4c0675d87e6\",\"dweb:/ipfs/QmcjQcgkWa3ZPTCzUEjXxoM3RjP4T6uDCMSiFnUvhRARen\"]},\"project:/contracts/TVTB/TVTBTokenCrowdsale.sol\":{\"keccak256\":\"0x23a9b206dff70c91e4300bf2d05e0bf3eefd9f0331bd9ec156bf731af748764f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a9c842ae19e07fdce2b7fb0f1b033e9bc1fb3247c5c0362fe69e2fb8e5fdaaa\",\"dweb:/ipfs/Qma7YrDA2yLSkGq5ALGf1b3o39CTSF8ELLemWyuLfZSLHD\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109af3803806109af83398101604081905261002f9161016a565b816100393361011a565b600180558061008f5760405162461bcd60e51b815260206004820152601460248201527f43726f776473616c653a2072617465206973203000000000000000000000000060448201526064015b60405180910390fd5b6002556001600160a01b0381166100f45760405162461bcd60e51b8152602060048201526024808201527f43726f776473616c653a20746f6b656e20697320746865207a65726f206164646044820152637265737360e01b6064820152608401610086565b600480546001600160a01b0319166001600160a01b0392909216919091179055506101a7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561017d57600080fd5b825160208401519092506001600160a01b038116811461019c57600080fd5b809150509250929050565b6107f9806101b66000396000f3fe60806040526004361061007f5760003560e01c8063715018a61161004e578063715018a6146101185780638da5cb5b1461012d578063d0febe4c1461014b578063f2fde38b1461015357600080fd5b806321df0da71461008b57806334fcf437146100c257806340582f13146100e4578063679aefce1461010357600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506004546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ce57600080fd5b506100e26100dd3660046106f4565b610173565b005b3480156100f057600080fd5b506003545b6040519081526020016100b9565b34801561010f57600080fd5b506002546100f5565b34801561012457600080fd5b506100e26101e7565b34801561013957600080fd5b506000546001600160a01b03166100a5565b6100e261021d565b34801561015f57600080fd5b506100e261016e3660046106cb565b6102ff565b6000546001600160a01b031633146101a65760405162461bcd60e51b815260040161019d90610726565b60405180910390fd5b60025460408051918252602082018390527f087f280cda785760f07a7708d1eca30d6ced75d7319a3404b02c5d98b6500f23910160405180910390a1600255565b6000546001600160a01b031633146102115760405162461bcd60e51b815260040161019d90610726565b61021b600061039a565b565b600260015414156102705760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161019d565b6002600155333461028182826103ea565b600061028c82610454565b60035490915061029c9083610478565b6003556102a9838261048b565b60408051838152602081018390526001600160a01b038516917f85bec9fa7bf00761dd3badd9aebcb5ca4147d2abf1b17864efcb6627e33ad2c4910160405180910390a26102f682610499565b50506001805550565b6000546001600160a01b031633146103295760405162461bcd60e51b815260040161019d90610726565b6001600160a01b03811661038e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161019d565b6103978161039a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103f482826104aa565b60006103ff82610454565b905080600114610422576040516315b2471760e01b815260040160405180910390fd5b600061042d84610560565b9050801561044e57604051632a21471160e01b815260040160405180910390fd5b50505050565b60006002546000141561046957506001919050565b610472826105ef565b92915050565b6000610484828461075b565b9392505050565b6104958282610606565b5050565b600254156103975761039781610692565b6001600160a01b0382166105135760405162461bcd60e51b815260206004820152602a60248201527f43726f776473616c653a2062656e656669636961727920697320746865207a65604482015269726f206164647265737360b01b606482015260840161019d565b806104955760405162461bcd60e51b815260206004820152601960248201527f43726f776473616c653a20776569416d6f756e74206973203000000000000000604482015260640161019d565b60006105746004546001600160a01b031690565b6040516370a0823160e01b81526001600160a01b03848116600483015291909116906370a082319060240160206040518083038186803b1580156105b757600080fd5b505afa1580156105cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610472919061070d565b6000610472600254836106bf90919063ffffffff16565b60005b8181101561068d576004546001600160a01b03166040516335313c2160e11b81526001600160a01b0385811660048301529190911690636a62784290602401600060405180830381600087803b15801561066257600080fd5b505af1158015610676573d6000803e3d6000fd5b50505050808061068590610792565b915050610609565b505050565b604051309082156108fc029083906000818181858888f19350505050158015610495573d6000803e3d6000fd5b60006104848284610773565b6000602082840312156106dd57600080fd5b81356001600160a01b038116811461048457600080fd5b60006020828403121561070657600080fd5b5035919050565b60006020828403121561071f57600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561076e5761076e6107ad565b500190565b600081600019048311821515161561078d5761078d6107ad565b500290565b60006000198214156107a6576107a66107ad565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202c35f6ff83fe531264ee278c629c4a39aeeadfa1b6c6a153ce43b0e79289ad0464736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063715018a61161004e578063715018a6146101185780638da5cb5b1461012d578063d0febe4c1461014b578063f2fde38b1461015357600080fd5b806321df0da71461008b57806334fcf437146100c257806340582f13146100e4578063679aefce1461010357600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506004546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ce57600080fd5b506100e26100dd3660046106f4565b610173565b005b3480156100f057600080fd5b506003545b6040519081526020016100b9565b34801561010f57600080fd5b506002546100f5565b34801561012457600080fd5b506100e26101e7565b34801561013957600080fd5b506000546001600160a01b03166100a5565b6100e261021d565b34801561015f57600080fd5b506100e261016e3660046106cb565b6102ff565b6000546001600160a01b031633146101a65760405162461bcd60e51b815260040161019d90610726565b60405180910390fd5b60025460408051918252602082018390527f087f280cda785760f07a7708d1eca30d6ced75d7319a3404b02c5d98b6500f23910160405180910390a1600255565b6000546001600160a01b031633146102115760405162461bcd60e51b815260040161019d90610726565b61021b600061039a565b565b600260015414156102705760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161019d565b6002600155333461028182826103ea565b600061028c82610454565b60035490915061029c9083610478565b6003556102a9838261048b565b60408051838152602081018390526001600160a01b038516917f85bec9fa7bf00761dd3badd9aebcb5ca4147d2abf1b17864efcb6627e33ad2c4910160405180910390a26102f682610499565b50506001805550565b6000546001600160a01b031633146103295760405162461bcd60e51b815260040161019d90610726565b6001600160a01b03811661038e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161019d565b6103978161039a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103f482826104aa565b60006103ff82610454565b905080600114610422576040516315b2471760e01b815260040160405180910390fd5b600061042d84610560565b9050801561044e57604051632a21471160e01b815260040160405180910390fd5b50505050565b60006002546000141561046957506001919050565b610472826105ef565b92915050565b6000610484828461075b565b9392505050565b6104958282610606565b5050565b600254156103975761039781610692565b6001600160a01b0382166105135760405162461bcd60e51b815260206004820152602a60248201527f43726f776473616c653a2062656e656669636961727920697320746865207a65604482015269726f206164647265737360b01b606482015260840161019d565b806104955760405162461bcd60e51b815260206004820152601960248201527f43726f776473616c653a20776569416d6f756e74206973203000000000000000604482015260640161019d565b60006105746004546001600160a01b031690565b6040516370a0823160e01b81526001600160a01b03848116600483015291909116906370a082319060240160206040518083038186803b1580156105b757600080fd5b505afa1580156105cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610472919061070d565b6000610472600254836106bf90919063ffffffff16565b60005b8181101561068d576004546001600160a01b03166040516335313c2160e11b81526001600160a01b0385811660048301529190911690636a62784290602401600060405180830381600087803b15801561066257600080fd5b505af1158015610676573d6000803e3d6000fd5b50505050808061068590610792565b915050610609565b505050565b604051309082156108fc029083906000818181858888f19350505050158015610495573d6000803e3d6000fd5b60006104848284610773565b6000602082840312156106dd57600080fd5b81356001600160a01b038116811461048457600080fd5b60006020828403121561070657600080fd5b5035919050565b60006020828403121561071f57600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561076e5761076e6107ad565b500190565b600081600019048311821515161561078d5761078d6107ad565b500290565b60006000198214156107a6576107a66107ad565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202c35f6ff83fe531264ee278c629c4a39aeeadfa1b6c6a153ce43b0e79289ad0464736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1160:59",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:59",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "151:253:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "197:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "206:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "209:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "199:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "199:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "199:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "172:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "181:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "168:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "168:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "193:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "164:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "164:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "161:52:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "222:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "238:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "232:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:16:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "222:6:59"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "257:38:59",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "280:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "291:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "276:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "276:18:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "270:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "270:25:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "261:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "358:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "367:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "360:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "360:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "360:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "317:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "328:5:59"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "343:3:59",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "348:1:59",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "339:3:59"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "339:11:59"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "352:1:59",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "335:3:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "335:19:59"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "324:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "324:31:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "314:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "314:42:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "307:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:50:59"
                  },
                  "nodeType": "YulIf",
                  "src": "304:70:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "383:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "393:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "383:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_contract$_ERC721PresetMinterPauserAutoId_$3702_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "109:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "120:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "132:6:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "140:6:59",
                "type": ""
              }
            ],
            "src": "14:390:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "583:226:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "600:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "611:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "593:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "593:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "593:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "634:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "645:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "630:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "630:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "650:2:59",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "623:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "623:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "623:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "673:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "684:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "669:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "669:18:59"
                      },
                      {
                        "hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "689:34:59",
                        "type": "",
                        "value": "Crowdsale: token is the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "662:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "662:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "662:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "744:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "755:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "740:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "740:18:59"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "760:6:59",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "733:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "733:34:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "733:34:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "776:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "788:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "799:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "784:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "776:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "560:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "574:4:59",
                "type": ""
              }
            ],
            "src": "409:400:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "988:170:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1005:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1016:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "998:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "998:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "998:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1039:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1050:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1035:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1035:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1055:2:59",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1028:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1028:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1028:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1078:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1089:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1074:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1074:18:59"
                      },
                      {
                        "hexValue": "43726f776473616c653a20726174652069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1094:22:59",
                        "type": "",
                        "value": "Crowdsale: rate is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1067:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1067:50:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1067:50:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1126:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1138:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1149:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1134:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1126:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "965:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "979:4:59",
                "type": ""
              }
            ],
            "src": "814:344:59"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_contract$_ERC721PresetMinterPauserAutoId_$3702_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Crowdsale: token is the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Crowdsale: rate is 0\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 59,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4037:59",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:59",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:59"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:59"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:59",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:59"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:59"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:59",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:59",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:59"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:59"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:59",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:59"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:59"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:59"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:59"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:59",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:59",
                "type": ""
              }
            ],
            "src": "14:286:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "375:110:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "421:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "430:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "433:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "423:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "423:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "423:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "396:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "405:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "392:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "392:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "417:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "388:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "388:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "385:52:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "446:33:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "469:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "456:12:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "456:23:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "446:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "341:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "352:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "364:6:59",
                "type": ""
              }
            ],
            "src": "305:180:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "571:103:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "617:16:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "626:1:59",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "629:1:59",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "619:6:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "619:12:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "619:12:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "592:7:59"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "601:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "588:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "588:23:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "613:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "584:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "584:32:59"
                  },
                  "nodeType": "YulIf",
                  "src": "581:52:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "642:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "658:9:59"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "652:5:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "652:16:59"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "642:6:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "537:9:59",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "548:7:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "560:6:59",
                "type": ""
              }
            ],
            "src": "490:184:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:102:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "790:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "802:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "813:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "798:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "798:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "790:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "832:9:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "847:6:59"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "863:3:59",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "868:1:59",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "859:3:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "859:11:59"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "872:1:59",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "855:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "855:19:59"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "843:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "843:32:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:51:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "825:51:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "749:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "760:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "771:4:59",
                "type": ""
              }
            ],
            "src": "679:203:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1027:102:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1037:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1049:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1060:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1045:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1045:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1037:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1079:9:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1094:6:59"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1110:3:59",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1115:1:59",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1106:3:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1106:11:59"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1119:1:59",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1102:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1102:19:59"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1090:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1090:32:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1072:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1072:51:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1072:51:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC721PresetMinterPauserAutoId_$3702__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "996:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1007:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1018:4:59",
                "type": ""
              }
            ],
            "src": "887:242:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1308:228:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1325:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1336:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1318:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1318:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1318:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1359:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1370:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1355:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1355:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1375:2:59",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1348:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1348:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1348:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1398:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1409:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1394:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1394:18:59"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1414:34:59",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1387:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1387:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1469:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1480:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1465:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1465:18:59"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1485:8:59",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1458:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1458:36:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1458:36:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1503:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1515:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1526:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1511:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1511:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1503:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1285:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1299:4:59",
                "type": ""
              }
            ],
            "src": "1134:402:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1715:182:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1732:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1743:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1725:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1725:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1725:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1766:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1777:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1762:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1762:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1782:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1755:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1755:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1755:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1805:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1816:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1801:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1801:18:59"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1821:34:59",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1794:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1794:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1794:62:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1865:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1877:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1888:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1873:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1865:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1692:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1706:4:59",
                "type": ""
              }
            ],
            "src": "1541:356:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2076:232:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2093:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2104:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2086:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2086:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2086:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2127:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2138:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2123:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2123:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2143:2:59",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2116:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2116:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2116:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2166:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2177:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2162:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2162:18:59"
                      },
                      {
                        "hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2182:34:59",
                        "type": "",
                        "value": "Crowdsale: beneficiary is the ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2155:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2155:62:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2155:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2237:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2248:2:59",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2233:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2233:18:59"
                      },
                      {
                        "hexValue": "726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2253:12:59",
                        "type": "",
                        "value": "ro address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2226:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:40:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2226:40:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2275:27:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2287:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2298:3:59",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2283:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2283:19:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2275:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2053:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2067:4:59",
                "type": ""
              }
            ],
            "src": "1902:406:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2487:181:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2504:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2515:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2497:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2497:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2497:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2538:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2549:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2534:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2534:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2554:2:59",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2527:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2527:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2527:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2577:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2588:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2573:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2573:18:59"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2593:33:59",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2566:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2566:61:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2566:61:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2636:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2648:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2659:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2644:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2644:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2636:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2464:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2478:4:59",
                "type": ""
              }
            ],
            "src": "2313:355:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2847:175:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2864:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2875:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2857:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2857:21:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2857:21:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2898:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2909:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2894:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2894:18:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2914:2:59",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2887:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2887:30:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2887:30:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2937:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2948:2:59",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2933:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2933:18:59"
                      },
                      {
                        "hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2953:27:59",
                        "type": "",
                        "value": "Crowdsale: weiAmount is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2926:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2926:55:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2926:55:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2990:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3002:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3013:2:59",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2998:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2998:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2990:4:59"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2824:9:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2838:4:59",
                "type": ""
              }
            ],
            "src": "2673:349:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3128:76:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3138:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3150:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3161:2:59",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3146:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3146:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3138:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3180:9:59"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3191:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3173:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3173:25:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3173:25:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3097:9:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3108:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3119:4:59",
                "type": ""
              }
            ],
            "src": "3027:177:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3338:119:59",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3348:26:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3360:9:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3371:2:59",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3356:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3356:18:59"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3348:4:59"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3390:9:59"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3401:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3383:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3383:25:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3383:25:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3428:9:59"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3439:2:59",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3424:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3424:18:59"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3444:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3417:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3417:34:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3417:34:59"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3299:9:59",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3310:6:59",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3318:6:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3329:4:59",
                "type": ""
              }
            ],
            "src": "3209:248:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3510:80:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3537:22:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3539:16:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3539:18:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3539:18:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3526:1:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3533:1:59"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3529:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3529:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3523:2:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3523:13:59"
                  },
                  "nodeType": "YulIf",
                  "src": "3520:39:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3568:16:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3579:1:59"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3582:1:59"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3575:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3575:9:59"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3568:3:59"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3493:1:59",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3496:1:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3502:3:59",
                "type": ""
              }
            ],
            "src": "3462:128:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3647:116:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3706:22:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3708:16:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3708:18:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3708:18:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3678:1:59"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3671:6:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3671:9:59"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3664:6:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3664:17:59"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3686:1:59"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3697:1:59",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3693:3:59"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3693:6:59"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3701:1:59"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "3689:3:59"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3689:14:59"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3683:2:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3683:21:59"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3660:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3660:45:59"
                  },
                  "nodeType": "YulIf",
                  "src": "3657:71:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3737:20:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3752:1:59"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3755:1:59"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3748:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3748:9:59"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3737:7:59"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3626:1:59",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3629:1:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3635:7:59",
                "type": ""
              }
            ],
            "src": "3595:168:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3815:88:59",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3846:22:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3848:16:59"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3848:18:59"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3848:18:59"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3831:5:59"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3842:1:59",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3838:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3838:6:59"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3828:2:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3828:17:59"
                  },
                  "nodeType": "YulIf",
                  "src": "3825:43:59"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3877:20:59",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3888:5:59"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3895:1:59",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3884:3:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3884:13:59"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3877:3:59"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3797:5:59",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "3807:3:59",
                "type": ""
              }
            ],
            "src": "3768:135:59"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3940:95:59",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3957:1:59",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3964:3:59",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3969:10:59",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3960:3:59"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3960:20:59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3950:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3950:31:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3950:31:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3997:1:59",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4000:4:59",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3990:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3990:15:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3990:15:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4021:1:59",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4024:4:59",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4014:6:59"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4014:15:59"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4014:15:59"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3908:127:59"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ERC721PresetMinterPauserAutoId_$3702__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Crowdsale: beneficiary is the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Crowdsale: weiAmount is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 59,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "370:2365:57:-:0;;;562:245;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;644:4;921:32:4;719:10:25;921:18:4;:32::i;:::-;1701:1:7;1806:22;;2211:8:35;2203:41;;;;-1:-1:-1;;;2203:41:35;;1016:2:59;2203:41:35;;;998:21:59;1055:2;1035:18;;;1028:30;1094:22;1074:18;;;1067:50;1134:18;;2203:41:35;;;;;;;;;2255:5;:12;-1:-1:-1;;;;;685:28:57;::::1;664:111;;;::::0;-1:-1:-1;;;664:111:57;;611:2:59;664:111:57::1;::::0;::::1;593:21:59::0;650:2;630:18;;;623:30;689:34;669:18;;;662:62;-1:-1:-1;;;740:18:59;;;733:34;784:19;;664:111:57::1;409:400:59::0;664:111:57::1;786:6;:14:::0;;-1:-1:-1;;;;;;786:14:57::1;-1:-1:-1::0;;;;;786:14:57;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;370:2365:57;;2270:187:4;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:4;;;-1:-1:-1;;;;;;2378:17:4;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:390:59:-;132:6;140;193:2;181:9;172:7;168:23;164:32;161:52;;;209:1;206;199:12;161:52;232:16;;291:2;276:18;;270:25;232:16;;-1:-1:-1;;;;;;324:31:59;;314:42;;304:70;;370:1;367;360:12;304:70;393:5;383:15;;;14:390;;;;;:::o;814:344::-;370:2365:57;;;;;;",
  "deployedSourceMap": "370:2365:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:144;;;;;;;;;;-1:-1:-1;995:6:57;;-1:-1:-1;;;;;995:6:57;866:144;;;-1:-1:-1;;;;;843:32:59;;;825:51;;813:2;798:18;866:144:57;;;;;;;;3910:138:35;;;;;;;;;;-1:-1:-1;3910:138:35;;;;;:::i;:::-;;:::i;:::-;;3693:90;;;;;;;;;;-1:-1:-1;3766:10:35;;3693:90;;;3173:25:59;;;3161:2;3146:18;3693:90:35;3027:177:59;3550:80:35;;;;;;;;;;-1:-1:-1;3618:5:35;;3550:80;;1668:101:4;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;-1:-1:-1;1082:7:4;1108:6;-1:-1:-1;;;;;1108:6:4;1036:85;;2820:645:35;;;:::i;1918:198:4:-;;;;;;;;;;-1:-1:-1;1918:198:4;;;;;:::i;:::-;;:::i;3910:138:35:-;1082:7:4;1108:6;-1:-1:-1;;;;;1108:6:4;719:10:25;1248:23:4;1240:68;;;;-1:-1:-1;;;1240:68:4;;;;;;;:::i;:::-;;;;;;;;;4006:5:35::1;::::0;3983:35:::1;::::0;;3383:25:59;;;3439:2;3424:18;;3417:34;;;3983:35:35::1;::::0;3356:18:59;3983:35:35::1;;;;;;;4029:5;:12:::0;3910:138::o;1668:101:4:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:4;719:10:25;1248:23:4;1240:68;;;;-1:-1:-1;;;1240:68:4;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2820:645:35:-;1744:1:7;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:7;;2515:2:59;2317:63:7;;;2497:21:59;2554:2;2534:18;;;2527:30;2593:33;2573:18;;;2566:61;2644:18;;2317:63:7;2313:355:59;2317:63:7;1744:1;2455:7;:18;719:10:25;2953:9:35::1;2973:44;719:10:25::0;2953:9:35;2973:20:::1;:44::i;:::-;3076:14;3093:26;3109:9;3093:15;:26::i;:::-;3167:10;::::0;3076:43;;-1:-1:-1;3167:25:35::1;::::0;3182:9;3167:14:::1;:25::i;:::-;3154:10;:38:::0;3203:37:::1;3220:11:::0;3233:6;3203:16:::1;:37::i;:::-;3255:55;::::0;;3383:25:59;;;3439:2;3424:18;;3417:34;;;-1:-1:-1;;;;;3255:55:35;::::1;::::0;::::1;::::0;3356:18:59;3255:55:35::1;;;;;;;3378:24;3392:9;3378:13;:24::i;:::-;-1:-1:-1::0;;1701:1:7;2628:22;;-1:-1:-1;2820:645:35:o;1918:198:4:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:4;719:10:25;1248:23:4;1240:68;;;;-1:-1:-1;;;1240:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:4;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:4;;1336:2:59;1998:73:4::1;::::0;::::1;1318:21:59::0;1375:2;1355:18;;;1348:30;1414:34;1394:18;;;1387:62;-1:-1:-1;;;1465:18:59;;;1458:36;1511:19;;1998:73:4::1;1134:402:59::0;1998:73:4::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:4;;;-1:-1:-1;;;;;;2378:17:4;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;:463:57:-;2401:50;2428:11;2441:9;2401:26;:50::i;:::-;2462:19;2484:26;2500:9;2484:15;:26::i;:::-;2462:48;;2525:11;2540:1;2525:16;2521:71;;2564:17;;-1:-1:-1;;;2564:17:57;;;;;;;;;;;2521:71;2602:15;2620:23;2631:11;2620:10;:23::i;:::-;2602:41;-1:-1:-1;2658:12:57;;2654:73;;2693:23;;-1:-1:-1;;;2693:23:57;;;;;;;;;;;2654:73;2391:342;;2270:463;;:::o;2028:236::-;2136:7;2163:5;;2172:1;2163:10;2159:49;;;-1:-1:-1;2196:1:57;;2028:236;-1:-1:-1;2028:236:57:o;2159:49::-;2225:32;2247:9;2225:21;:32::i;:::-;2218:39;2028:236;-1:-1:-1;;2028:236:57:o;2755:96:30:-;2813:7;2839:5;2843:1;2839;:5;:::i;:::-;2832:12;2755:96;-1:-1:-1;;;2755:96:30:o;6646:162:35:-;6761:40;6776:11;6789;6761:14;:40::i;:::-;6646:162;;:::o;1632:147:57:-;1706:5;;:10;1702:71;;1732:30;1752:9;1732:19;:30::i;5587:313:35:-;-1:-1:-1;;;;;5738:25:35;;5717:114;;;;-1:-1:-1;;;5717:114:35;;2104:2:59;5717:114:35;;;2086:21:59;2143:2;2123:18;;;2116:30;2182:34;2162:18;;;2155:62;-1:-1:-1;;;2233:18:59;;;2226:40;2283:19;;5717:114:35;1902:406:59;5717:114:35;5849:14;5841:52;;;;-1:-1:-1;;;5841:52:35;;2875:2:59;5841:52:35;;;2857:21:59;2914:2;2894:18;;;2887:30;2953:27;2933:18;;;2926:55;2998:18;;5841:52:35;2673:349:59;1016:130:57;1080:7;1106:10;995:6;;-1:-1:-1;;;;;995:6:57;;866:144;1106:10;:33;;-1:-1:-1;;;1106:33:57;;-1:-1:-1;;;;;843:32:59;;;1106:33:57;;;825:51:59;1106:20:57;;;;;;;798:18:59;;1106:33:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4881:164:35:-;4988:7;5018:20;5032:5;;5018:9;:13;;:20;;;;:::i;1330:215:57:-;1449:9;1444:95;1468:11;1464:1;:15;1444:95;;;995:6;;-1:-1:-1;;;;;995:6:57;1500:28;;-1:-1:-1;;;1500:28:57;;-1:-1:-1;;;;;843:32:59;;;1500:28:57;;;825:51:59;1500:15:57;;;;;;;798:18:59;;1500:28:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1481:3;;;;;:::i;:::-;;;;1444:95;;;;1330:215;;:::o;4514:118:35:-;4583:42;;4599:4;;4583:42;;;;;4615:9;;4583:42;;;;4615:9;4599:4;4583:42;;;;;;;;;;;;;;;;;;;3465:96:30;3523:7;3549:5;3553:1;3549;:5;:::i;14:286:59:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:59;;210:42;;200:70;;266:1;263;256:12;305:180;364:6;417:2;405:9;396:7;392:23;388:32;385:52;;;433:1;430;423:12;385:52;-1:-1:-1;456:23:59;;305:180;-1:-1:-1;305:180:59:o;490:184::-;560:6;613:2;601:9;592:7;588:23;584:32;581:52;;;629:1;626;619:12;581:52;-1:-1:-1;652:16:59;;490:184;-1:-1:-1;490:184:59:o;1541:356::-;1743:2;1725:21;;;1762:18;;;1755:30;1821:34;1816:2;1801:18;;1794:62;1888:2;1873:18;;1541:356::o;3462:128::-;3502:3;3533:1;3529:6;3526:1;3523:13;3520:39;;;3539:18;;:::i;:::-;-1:-1:-1;3575:9:59;;3462:128::o;3595:168::-;3635:7;3701:1;3697;3693:6;3689:14;3686:1;3683:21;3678:1;3671:9;3664:17;3660:45;3657:71;;;3708:18;;:::i;:::-;-1:-1:-1;3748:9:59;;3595:168::o;3768:135::-;3807:3;-1:-1:-1;;3828:17:59;;3825:43;;;3848:18;;:::i;:::-;-1:-1:-1;3895:1:59;3884:13;;3768:135::o;3908:127::-;3969:10;3964:3;3960:20;3957:1;3950:31;4000:4;3997:1;3990:15;4024:4;4021:1;4014:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol\";\n\nimport \"../Crowdsale.sol\";\n\n/**\n * @title TVTBTokenCrowdsale\n * @dev Extension of Crowdsale contract whose tokens are minted in each purchase.\n * Token ownership should be transferred to TVTBTokenCrowdsale for minting.\n */\ncontract TVTBTokenCrowdsale is Crowdsale {\n    // The token being sold\n    ERC721PresetMinterPauserAutoId private _token;\n\n    error TVTTokenAlreadyBought();\n    error TVTTokenOnlyOne();\n\n    constructor(uint256 rate, ERC721PresetMinterPauserAutoId token)\n        Crowdsale(rate)\n    {\n        require(\n            address(token) != address(0),\n            \"Crowdsale: token is the zero address\"\n        );\n\n        _token = token;\n    }\n\n    /**\n     * @return the token being sold.\n     */\n    function getToken() public view returns (ERC721PresetMinterPauserAutoId) {\n        return ERC721PresetMinterPauserAutoId(address(_token));\n    }\n\n    function _balanceOf(address beneficiary) internal view returns (uint256) {\n        return getToken().balanceOf(beneficiary);\n    }\n\n    /**\n     * @dev Overrides delivery by minting tokens upon purchase.\n     * @param beneficiary Token purchaser\n     * @param tokenAmount Number of tokens to be minted\n     */\n    function _deliverTokens(address beneficiary, uint256 tokenAmount)\n        internal\n        override\n    {\n        for (uint256 i = 0; i < tokenAmount; i++) {\n            getToken().mint(beneficiary);\n        }\n    }\n\n    /**\n     * @dev Determines how ETH is stored/forwarded on purchases.\n     */\n    function _forwardFunds(uint256 weiAmount) internal override {\n        if (_rate != 0) {\n            super._forwardFunds(weiAmount);\n        }\n    }\n\n    /**\n     * @dev Override to extend the way in which ether is converted to tokens.\n     * @param weiAmount Value in wei to be converted into tokens\n     * @return Number of tokens that can be purchased with the specified _weiAmount\n     */\n    function _getTokenAmount(uint256 weiAmount)\n        internal\n        view\n        override\n        returns (uint256)\n    {\n        if (_rate == 0) {\n            return 1;\n        }\n\n        return super._getTokenAmount(weiAmount);\n    }\n\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount)\n        internal\n        view\n        override\n    {\n        super._preValidatePurchase(beneficiary, weiAmount);\n\n        uint256 tokenAmount = _getTokenAmount(weiAmount);\n\n        if (tokenAmount != 1) {\n            revert TVTTokenOnlyOne();\n        }\n\n        uint256 balance = _balanceOf(beneficiary);\n\n        if (balance != 0) {\n            revert TVTTokenAlreadyBought();\n        }\n    }\n}\n",
  "sourcePath": "/Users/ievgencherkaskyi/Projects/tivan/launchpool/contracts/TVTB/TVTBTokenCrowdsale.sol",
  "ast": {
    "absolutePath": "project:/contracts/TVTB/TVTBTokenCrowdsale.sol",
    "exportedSymbols": {
      "AccessControl": [
        319
      ],
      "AccessControlEnumerable": [
        444
      ],
      "Address": [
        3997
      ],
      "Context": [
        4019
      ],
      "Counters": [
        4093
      ],
      "Crowdsale": [
        6255
      ],
      "ERC165": [
        4320
      ],
      "ERC721": [
        2917
      ],
      "ERC721Burnable": [
        3081
      ],
      "ERC721Enumerable": [
        3419
      ],
      "ERC721Pausable": [
        3456
      ],
      "ERC721PresetMinterPauserAutoId": [
        3702
      ],
      "EnumerableSet": [
        5243
      ],
      "IAccessControl": [
        517
      ],
      "IAccessControlEnumerable": [
        542
      ],
      "IERC165": [
        4332
      ],
      "IERC20": [
        1585
      ],
      "IERC721": [
        3033
      ],
      "IERC721Enumerable": [
        3487
      ],
      "IERC721Metadata": [
        3514
      ],
      "IERC721Receiver": [
        3051
      ],
      "Ownable": [
        647
      ],
      "Pausable": [
        881
      ],
      "ReentrancyGuard": [
        921
      ],
      "SafeERC20": [
        2051
      ],
      "SafeMath": [
        4644
      ],
      "Strings": [
        4296
      ],
      "TVTBTokenCrowdsale": [
        11431
      ]
    },
    "id": 11432,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11247,
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:57"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol",
        "file": "@openzeppelin/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol",
        "id": 11248,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11432,
        "sourceUnit": 3703,
        "src": "56:89:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 11249,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11432,
        "sourceUnit": 6256,
        "src": "147:26:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11251,
              "name": "Crowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6255,
              "src": "401:9:57"
            },
            "id": 11252,
            "nodeType": "InheritanceSpecifier",
            "src": "401:9:57"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11250,
          "nodeType": "StructuredDocumentation",
          "src": "175:194:57",
          "text": " @title TVTBTokenCrowdsale\n @dev Extension of Crowdsale contract whose tokens are minted in each purchase.\n Token ownership should be transferred to TVTBTokenCrowdsale for minting."
        },
        "fullyImplemented": true,
        "id": 11431,
        "linearizedBaseContracts": [
          11431,
          6255,
          921,
          647,
          4019
        ],
        "name": "TVTBTokenCrowdsale",
        "nameLocation": "379:18:57",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11255,
            "mutability": "mutable",
            "name": "_token",
            "nameLocation": "484:6:57",
            "nodeType": "VariableDeclaration",
            "scope": 11431,
            "src": "445:45:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
              "typeString": "contract ERC721PresetMinterPauserAutoId"
            },
            "typeName": {
              "id": 11254,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11253,
                "name": "ERC721PresetMinterPauserAutoId",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3702,
                "src": "445:30:57"
              },
              "referencedDeclaration": 3702,
              "src": "445:30:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                "typeString": "contract ERC721PresetMinterPauserAutoId"
              }
            },
            "visibility": "private"
          },
          {
            "id": 11257,
            "name": "TVTTokenAlreadyBought",
            "nameLocation": "503:21:57",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:2:57"
            },
            "src": "497:30:57"
          },
          {
            "id": 11259,
            "name": "TVTTokenOnlyOne",
            "nameLocation": "538:15:57",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:2:57"
            },
            "src": "532:24:57"
          },
          {
            "body": {
              "id": 11287,
              "nodeType": "Block",
              "src": "654:153:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11273,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11264,
                              "src": "693:5:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                                "typeString": "contract ERC721PresetMinterPauserAutoId"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                                "typeString": "contract ERC721PresetMinterPauserAutoId"
                              }
                            ],
                            "id": 11272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "685:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11271,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "685:7:57",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "685:14:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "711:1:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "703:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11275,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "703:7:57",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "703:10:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "685:28:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
                        "id": 11280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "727:38:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
                          "typeString": "literal_string \"Crowdsale: token is the zero address\""
                        },
                        "value": "Crowdsale: token is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
                          "typeString": "literal_string \"Crowdsale: token is the zero address\""
                        }
                      ],
                      "id": 11270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "664:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "664:111:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11282,
                  "nodeType": "ExpressionStatement",
                  "src": "664:111:57"
                },
                {
                  "expression": {
                    "id": 11285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11283,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11255,
                      "src": "786:6:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                        "typeString": "contract ERC721PresetMinterPauserAutoId"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11284,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11264,
                      "src": "795:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                        "typeString": "contract ERC721PresetMinterPauserAutoId"
                      }
                    },
                    "src": "786:14:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                      "typeString": "contract ERC721PresetMinterPauserAutoId"
                    }
                  },
                  "id": 11286,
                  "nodeType": "ExpressionStatement",
                  "src": "786:14:57"
                }
              ]
            },
            "id": 11288,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11267,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11261,
                    "src": "644:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 11268,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11266,
                  "name": "Crowdsale",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6255,
                  "src": "634:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "634:15:57"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11261,
                  "mutability": "mutable",
                  "name": "rate",
                  "nameLocation": "582:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11288,
                  "src": "574:12:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11264,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "619:5:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11288,
                  "src": "588:36:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                    "typeString": "contract ERC721PresetMinterPauserAutoId"
                  },
                  "typeName": {
                    "id": 11263,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11262,
                      "name": "ERC721PresetMinterPauserAutoId",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3702,
                      "src": "588:30:57"
                    },
                    "referencedDeclaration": 3702,
                    "src": "588:30:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                      "typeString": "contract ERC721PresetMinterPauserAutoId"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "573:52:57"
            },
            "returnParameters": {
              "id": 11269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "654:0:57"
            },
            "scope": 11431,
            "src": "562:245:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11302,
              "nodeType": "Block",
              "src": "939:71:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11298,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11255,
                            "src": "995:6:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                              "typeString": "contract ERC721PresetMinterPauserAutoId"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                              "typeString": "contract ERC721PresetMinterPauserAutoId"
                            }
                          ],
                          "id": 11297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "987:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11296,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "987:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "987:15:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11295,
                      "name": "ERC721PresetMinterPauserAutoId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3702,
                      "src": "956:30:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC721PresetMinterPauserAutoId_$3702_$",
                        "typeString": "type(contract ERC721PresetMinterPauserAutoId)"
                      }
                    },
                    "id": 11300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "956:47:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                      "typeString": "contract ERC721PresetMinterPauserAutoId"
                    }
                  },
                  "functionReturnParameters": 11294,
                  "id": 11301,
                  "nodeType": "Return",
                  "src": "949:54:57"
                }
              ]
            },
            "documentation": {
              "id": 11289,
              "nodeType": "StructuredDocumentation",
              "src": "813:48:57",
              "text": " @return the token being sold."
            },
            "functionSelector": "21df0da7",
            "id": 11303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "875:8:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "883:2:57"
            },
            "returnParameters": {
              "id": 11294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11293,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11303,
                  "src": "907:30:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                    "typeString": "contract ERC721PresetMinterPauserAutoId"
                  },
                  "typeName": {
                    "id": 11292,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11291,
                      "name": "ERC721PresetMinterPauserAutoId",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3702,
                      "src": "907:30:57"
                    },
                    "referencedDeclaration": 3702,
                    "src": "907:30:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                      "typeString": "contract ERC721PresetMinterPauserAutoId"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "906:32:57"
            },
            "scope": 11431,
            "src": "866:144:57",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11316,
              "nodeType": "Block",
              "src": "1089:57:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11313,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11305,
                        "src": "1127:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11310,
                          "name": "getToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11303,
                          "src": "1106:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC721PresetMinterPauserAutoId_$3702_$",
                            "typeString": "function () view returns (contract ERC721PresetMinterPauserAutoId)"
                          }
                        },
                        "id": 11311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1106:10:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                          "typeString": "contract ERC721PresetMinterPauserAutoId"
                        }
                      },
                      "id": 11312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2169,
                      "src": "1106:20:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 11314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1106:33:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11309,
                  "id": 11315,
                  "nodeType": "Return",
                  "src": "1099:40:57"
                }
              ]
            },
            "id": 11317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_balanceOf",
            "nameLocation": "1025:10:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11305,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1044:11:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11317,
                  "src": "1036:19:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1035:21:57"
            },
            "returnParameters": {
              "id": 11309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11317,
                  "src": "1080:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1079:9:57"
            },
            "scope": 11431,
            "src": "1016:130:57",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              6164
            ],
            "body": {
              "id": 11344,
              "nodeType": "Block",
              "src": "1434:111:57",
              "statements": [
                {
                  "body": {
                    "id": 11342,
                    "nodeType": "Block",
                    "src": "1486:53:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11339,
                              "name": "beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11320,
                              "src": "1516:11:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 11336,
                                "name": "getToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11303,
                                "src": "1500:8:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ERC721PresetMinterPauserAutoId_$3702_$",
                                  "typeString": "function () view returns (contract ERC721PresetMinterPauserAutoId)"
                                }
                              },
                              "id": 11337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1500:10:57",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721PresetMinterPauserAutoId_$3702",
                                "typeString": "contract ERC721PresetMinterPauserAutoId"
                              }
                            },
                            "id": 11338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3627,
                            "src": "1500:15:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 11340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1500:28:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11341,
                        "nodeType": "ExpressionStatement",
                        "src": "1500:28:57"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11330,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11327,
                      "src": "1464:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 11331,
                      "name": "tokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11322,
                      "src": "1468:11:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1464:15:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11343,
                  "initializationExpression": {
                    "assignments": [
                      11327
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11327,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1457:1:57",
                        "nodeType": "VariableDeclaration",
                        "scope": 11343,
                        "src": "1449:9:57",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11326,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1449:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11329,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1461:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1449:13:57"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1481:3:57",
                      "subExpression": {
                        "id": 11333,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11327,
                        "src": "1481:1:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11335,
                    "nodeType": "ExpressionStatement",
                    "src": "1481:3:57"
                  },
                  "nodeType": "ForStatement",
                  "src": "1444:95:57"
                }
              ]
            },
            "documentation": {
              "id": 11318,
              "nodeType": "StructuredDocumentation",
              "src": "1152:173:57",
              "text": " @dev Overrides delivery by minting tokens upon purchase.\n @param beneficiary Token purchaser\n @param tokenAmount Number of tokens to be minted"
            },
            "id": 11345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deliverTokens",
            "nameLocation": "1339:14:57",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11324,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1421:8:57"
            },
            "parameters": {
              "id": 11323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11320,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1362:11:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11345,
                  "src": "1354:19:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11322,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "1383:11:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11345,
                  "src": "1375:19:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:42:57"
            },
            "returnParameters": {
              "id": 11325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1434:0:57"
            },
            "scope": 11431,
            "src": "1330:215:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              6182
            ],
            "body": {
              "id": 11363,
              "nodeType": "Block",
              "src": "1692:87:57",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11352,
                      "name": "_rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6020,
                      "src": "1706:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1715:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1706:10:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11362,
                  "nodeType": "IfStatement",
                  "src": "1702:71:57",
                  "trueBody": {
                    "id": 11361,
                    "nodeType": "Block",
                    "src": "1718:55:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11358,
                              "name": "weiAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11348,
                              "src": "1752:9:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 11355,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1732:5:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_TVTBTokenCrowdsale_$11431_$",
                                "typeString": "type(contract super TVTBTokenCrowdsale)"
                              }
                            },
                            "id": 11357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_forwardFunds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6182,
                            "src": "1732:19:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 11359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1732:30:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11360,
                        "nodeType": "ExpressionStatement",
                        "src": "1732:30:57"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 11346,
              "nodeType": "StructuredDocumentation",
              "src": "1551:76:57",
              "text": " @dev Determines how ETH is stored/forwarded on purchases."
            },
            "id": 11364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_forwardFunds",
            "nameLocation": "1641:13:57",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11350,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1683:8:57"
            },
            "parameters": {
              "id": 11349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11348,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nameLocation": "1663:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11364,
                  "src": "1655:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1654:19:57"
            },
            "returnParameters": {
              "id": 11351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1692:0:57"
            },
            "scope": 11431,
            "src": "1632:147:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              6196
            ],
            "body": {
              "id": 11385,
              "nodeType": "Block",
              "src": "2149:115:57",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11373,
                      "name": "_rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6020,
                      "src": "2163:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2172:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2163:10:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11379,
                  "nodeType": "IfStatement",
                  "src": "2159:49:57",
                  "trueBody": {
                    "id": 11378,
                    "nodeType": "Block",
                    "src": "2175:33:57",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 11376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2196:1:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 11372,
                        "id": 11377,
                        "nodeType": "Return",
                        "src": "2189:8:57"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11382,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11367,
                        "src": "2247:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11380,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2225:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TVTBTokenCrowdsale_$11431_$",
                          "typeString": "type(contract super TVTBTokenCrowdsale)"
                        }
                      },
                      "id": 11381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6196,
                      "src": "2225:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 11383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:32:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11372,
                  "id": 11384,
                  "nodeType": "Return",
                  "src": "2218:39:57"
                }
              ]
            },
            "documentation": {
              "id": 11365,
              "nodeType": "StructuredDocumentation",
              "src": "1785:238:57",
              "text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
            },
            "id": 11386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTokenAmount",
            "nameLocation": "2037:15:57",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11369,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2110:8:57"
            },
            "parameters": {
              "id": 11368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11367,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nameLocation": "2061:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11386,
                  "src": "2053:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2052:19:57"
            },
            "returnParameters": {
              "id": 11372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11386,
                  "src": "2136:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2135:9:57"
            },
            "scope": 11431,
            "src": "2028:236:57",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              6222
            ],
            "body": {
              "id": 11429,
              "nodeType": "Block",
              "src": "2391:342:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11397,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11388,
                        "src": "2428:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11398,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11390,
                        "src": "2441:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11394,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2401:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TVTBTokenCrowdsale_$11431_$",
                          "typeString": "type(contract super TVTBTokenCrowdsale)"
                        }
                      },
                      "id": 11396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6222,
                      "src": "2401:26:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 11399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2401:50:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11400,
                  "nodeType": "ExpressionStatement",
                  "src": "2401:50:57"
                },
                {
                  "assignments": [
                    11402
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11402,
                      "mutability": "mutable",
                      "name": "tokenAmount",
                      "nameLocation": "2470:11:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 11429,
                      "src": "2462:19:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11401,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2462:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11406,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11404,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11390,
                        "src": "2500:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11403,
                      "name": "_getTokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11386
                      ],
                      "referencedDeclaration": 11386,
                      "src": "2484:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 11405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2484:26:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2462:48:57"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11407,
                      "name": "tokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11402,
                      "src": "2525:11:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 11408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2540:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2525:16:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11414,
                  "nodeType": "IfStatement",
                  "src": "2521:71:57",
                  "trueBody": {
                    "id": 11413,
                    "nodeType": "Block",
                    "src": "2543:49:57",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11410,
                            "name": "TVTTokenOnlyOne",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11259,
                            "src": "2564:15:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 11411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2564:17:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11412,
                        "nodeType": "RevertStatement",
                        "src": "2557:24:57"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    11416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11416,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2610:7:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 11429,
                      "src": "2602:15:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11415,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2602:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11420,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11418,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11388,
                        "src": "2631:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11417,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11317,
                      "src": "2620:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 11419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2620:23:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2602:41:57"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11421,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11416,
                      "src": "2658:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2669:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2658:12:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11428,
                  "nodeType": "IfStatement",
                  "src": "2654:73:57",
                  "trueBody": {
                    "id": 11427,
                    "nodeType": "Block",
                    "src": "2672:55:57",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11424,
                            "name": "TVTTokenAlreadyBought",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11257,
                            "src": "2693:21:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 11425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2693:23:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11426,
                        "nodeType": "RevertStatement",
                        "src": "2686:30:57"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 11430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nameLocation": "2279:20:57",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11392,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2378:8:57"
            },
            "parameters": {
              "id": 11391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11388,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "2308:11:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11430,
                  "src": "2300:19:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2300:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11390,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nameLocation": "2329:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11430,
                  "src": "2321:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2321:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2299:40:57"
            },
            "returnParameters": {
              "id": 11393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2391:0:57"
            },
            "scope": 11431,
            "src": "2270:463:57",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 11432,
        "src": "370:2365:57",
        "usedErrors": [
          11257,
          11259
        ]
      }
    ],
    "src": "32:2704:57"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {
    "97": {
      "events": {},
      "links": {},
      "address": "0x84D1Ca84d634Cb9C329B64327E920FE6ab6f1ED3",
      "transactionHash": "0xb6d33aaffb0ba162b5f6697f030a20540d6b81f7aeb8c0a07dc8b25d3449558e"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-13T07:47:38.851Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Extension of Crowdsale contract whose tokens are minted in each purchase. Token ownership should be transferred to TVTBTokenCrowdsale for minting.",
    "kind": "dev",
    "methods": {
      "buyTokens()": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function."
      },
      "getRate()": {
        "returns": {
          "_0": "the number of token units a buyer gets per wei."
        }
      },
      "getToken()": {
        "returns": {
          "_0": "the token being sold."
        }
      },
      "getWeiRaised()": {
        "returns": {
          "_0": "the amount of wei raised."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setRate(uint256)": {
        "params": {
          "rate": "Number of token units a buyer gets per wei"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "TVTBTokenCrowdsale",
    "version": 1
  },
  "userdoc": {
    "events": {
      "AfterCrowdsaleBuyTokens(address,uint256,uint256)": {
        "notice": "Event for token purchase logging"
      }
    },
    "kind": "user",
    "methods": {
      "setRate(uint256)": {
        "notice": "This function set the rate of token"
      }
    },
    "version": 1
  }
}